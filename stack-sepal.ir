{:definitions {"diff/diff-seq" ["defn" "diff-seq" ["coord" "a" "b"] ["find-seq-changes" "coord" ["reverse" "a"] ["reverse" "b"]]], "types/conceal-branch" ["defn" "conceal-branch" ["data"] ["--" "println" "|conceal" "data"] ["cond" [["literal?" "data"] "data"] [["branch?" "data"] ["conceal-branch" [":data" "data"]]] [["map?" "data"] ["->>" "data" ["map" ["fn" ["entry"] ["let" [[["[]" "k" "v"] "entry"]] ["[]" "k" ["conceal-branch" "v"]]]]] ["into" ["{}"]]]] [["vector?" "data"] ["mapv" "conceal-branch" "data"]] [["seq?" "data"] ["map" "conceal-branch" "data"]] [["set?" "data"] ["->>" "data" ["map" "conceal-branch"] ["into" ["#{}"]]]] [":else" ["do" ["println" "|Unkown data to conceal-branch:" "data"] "data"]]]], "main/dispatch!" ["defn" "dispatch!" ["op" "op-data"] ["let" [["new-store" ["updater" "@store-ref" "op" "op-data"]]] ["reset!" "store-ref" "new-store"]]], "diff/no-changes" ["def" "no-changes" ["[]"]], "diff/diff-view" ["defn" "diff-view" ["coord" "a" "b"] ["if" ["=" ["type" "a"] ["type" "b"]] ["cond" [["branch?" "a"] ["if" ["identical?" "a" "b"] "no-changes" ["diff-view" "coord" [":data" "a"] [":data" "b"]]]] [["literal?" "b"] ["if" ["identical?" "a" "b"] "no-changes" ["[]" ["[]" "coord" ":m/!" "b"]]]] [["map?" "b"] ["diff-map" "coord" "a" "b"]] [["set?" "b"] ["diff-set" "coord" "a" "b"]] [["vector?" "b"] ["diff-vector" "coord" "a" "b"]] [["seq?" "b"] ["diff-seq" "coord" "a" "b"]] [":else" ["do" ["println" "|Unexpected data" "a" "b"] ["[]"]]]] ["[]" ["[]" "coord" ":m/!" ["conceal-branch" "b"]]]]], "comp.panel/render-button" ["defn" "render-button" ["title" "op"] ["div" ["{}" [":style" "ui/button"] [":attrs" ["{}" [":inner-text" "title"]]] [":event" ["{}" [":click" ["on-click" "op"]]]]]]], "core/render-view" ["defn" "render-view" ["data-tree" "cached-data-tree"] ["--" "println" "|Calling render-view:" "data-tree" "cached-data-tree"] ["if" ["=" ["type" "data-tree"] ["type" "cached-data-tree"]] ["cond" [["branch?" "data-tree"] ["if" ["and" ["identical?" [":name" "data-tree"] [":name" "cached-data-tree"]] ["identical?" [":render" "data-tree"] [":render" "cached-data-tree"]] ["=seq" [":args" "data-tree"] [":args" "cached-data-tree"]]] ["do" "cached-data-tree"] ["assoc" "data-tree" ":data" ["render-view" [":data" "data-tree"] [":data" "cached-data-tree"]]]]] [["literal?" "data-tree"] "data-tree"] [["map?" "data-tree"] ["render-map" "data-tree" "cached-data-tree"]] [["vector?" "data-tree"] ["render-vector" "data-tree" "cached-data-tree"]] [["seq?" "data-tree"] ["render-seq" "data-tree" "cached-data-tree"]] [["set?" "data-tree"] ["render-set" "data-tree" "cached-data-tree"]] [":else" ["do" ["println" "|Unexpected data:" "data-tree"] "nil"]]] ["cond" [["branch?" "data-tree"] ["assoc" "data-tree" ":data" ["render-view" [":data" "data-tree"] "nil"]]] [["literal?" "data-tree"] "data-tree"] [["map?" "data-tree"] ["render-map" "data-tree" "nil"]] [["vector?" "data-tree"] ["render-vector" "data-tree" "nil"]] [["seq?" "data-tree"] ["render-seq" "data-tree" "nil"]] [["set?" "data-tree"] ["render-set" "data-tree" "nil"]] [":else" ["do" ["println" "|Unexpected data:" "data-tree"] "nil"]]]]], "main/-main!" ["defn" "-main!" [] ["enable-console-print!"] ["if" ["not" ["empty?" "ssr-stages"]] ["let" [["target" [".querySelector" "js/document" "|#app"]]] ["falsify-stage!" "target" ["render-element" ["comp-container" "@data-view-ref" "@client-store-ref"] "states-ref"] "dispatch!"]]] ["render-app!"] ["add-watch" "store-ref" ":gc" ["fn" [] ["gc-states!" "states-ref"]]] ["add-watch" "store-ref" ":changes" "render-data-view!"] ["add-watch" "client-store-ref" ":changes" "render-app!"] ["add-watch" "states-ref" ":changes" "render-app!"] ["render-data-view!"] ["println" "|app started!"]], "diff/diff-map" ["defn" "diff-map" ["coord" "a" "b"] ["let" [["a-pairs" ["sort-by" "first" "a"]] ["b-pairs" ["sort-by" "first" "b"]]] ["find-map-changes" ["[]"] "coord" "a-pairs" "b-pairs"]]], "core/render-set" ["defn" "render-set" ["data-tree" "cached"] ["->>" "data-tree" ["map" ["fn" ["x"] ["render-view" "x" "nil"]]] ["into" ["#{}"]]]], "updater/updater" ["defn" "updater" ["store" "op" "op-data"] ["case" "op" [":lit-0" ["assoc" "store" ":lit-0" "op-data"]] [":lit-1" ["assoc-in" "store" ["[]" ":in-map" ":lit-1"] "op-data"]] [":map-0" ["assoc-in" "store" ["[]" ":map-0" ":y"] "op-data"]] [":map-0-rm" ["update-in" "store" ["[]" ":map-0"] ["fn" ["cursor"] ["dissoc" "cursor" ":y"]]]] [":vec-0" ["update" "store" ":vec-0" ["fn" ["vec-0"] ["conj" "vec-0" "op-data" ":cursor"]]]] [":vec-0-rm" ["update" "store" ":vec-0" ["fn" ["vec-0"] ["into" ["[]"] ["butlast" "vec-0"]]]]] [":seq-0" ["update" "store" ":seq-0" ["fn" ["seq-0"] ["cons" "op-data" "seq-0"]]]] [":seq-0-rm" ["update" "store" ":seq-0" ["fn" ["seq-0"] ["rest" "seq-0"]]]] [":set-0" ["update" "store" ":set-0" ["fn" ["set-0"] ["conj" "set-0" "op-data"]]]] [":set-0-rm" ["update" "store" ":set-0" ["fn" ["set-0"] ["into" ["#{}"] ["rest" "set-0"]]]]] [":date" ["update-in" "store" ["[]" ":date" ":month"] "inc"]] ["do" ["println" "|Unhandled op:" "op"] "store"]]], "main/on-jsload!" ["defn" "on-jsload!" [] ["clear-cache!"] ["render-data-view!"] ["println" "|code update."]], "main/render-app!" ["defn" "render-app!" [] ["let" [["target" [".querySelector" "js/document" "|#app"]]] ["render!" ["comp-container" "@data-view-ref" "@client-store-ref"] "target" "dispatch!" "states-ref"]]], "types/Branch" ["defrecord" "Branch" ["name" "args" "data" "render"]], "branch.container/render" ["defn" "render" ["store"] ["merge" "store" ["{}" [":card" ["branch-card" [":user" "store"] [":date" "store"]]]]]], "util/literal?" ["defn" "literal?" ["x"] ["or" ["number?" "x"] ["string?" "x"] ["keyword?" "x"] ["nil?" "x"] ["symbol?" "x"] ["true?" "x"] ["false?" "x"]]], "patch/patch-map-set" ["defn" "patch-map-set" ["base" "coord" "data"] ["if" ["empty?" "coord"] "data" ["assoc-in" "base" "coord" "data"]]], "patch/patch-vector-drop" ["defn" "patch-vector-drop" ["base" "coord" "data"] ["update-in" "base" "coord" ["fn" ["cursor"] ["subvec" "cursor" "0" "data"]]]], "patch/patch-set-remove" ["defn" "patch-set-remove" ["base" "coord" "data"] ["update-in" "base" "coord" ["fn" ["cursor"] ["difference" "cursor" "data"]]]], "diff/diff-vector" ["defn" "diff-vector" ["coord" "a" "b"] ["find-vector-changes" ["[]"] "0" "coord" "a" "b"]], "types/branch?" ["defn" "branch?" ["x"] ["=" ["type" "x"] "Branch"]], "util/=seq" ["defn" "=seq" ["xs" "ys"] ["if" ["empty?" "xs"] ["if" ["empty?" "ys"] "true" "false"] ["if" ["empty?" "ys"] "false" ["if" ["identical?" ["first" "xs"] ["first" "ys"]] ["recur" ["rest" "xs"] ["rest" "ys"]] "false"]]]], "comp.container/render" ["defn" "render" ["data-view" "client-store"] ["fn" ["state" "mutate!"] ["div" ["{}" [":style" ["merge" "ui/global"]]] ["--" "div" ["{}"] ["comp-text" ["pr-str" "data-view"] "nil"]] ["div" ["{}"] ["comp-text" ["pr-str" "client-store"] "nil"]] ["comp-panel"] ["render-value" "client-store"]]]], "branch.card/render" ["defn" "render" ["user" "date"] ["{}" [":user" "user"] [":date" "date"]]], "core/render-map" ["defn" "render-map" ["data-tree" "cached"] ["->>" "data-tree" ["map" ["fn" ["entry"] ["let" [[["[]" "k" "v"] "entry"]] ["[]" "k" ["render-view" "v" ["get" "cached" "k"]]]]]] ["into" ["{}"]]]], "core/create-branch" ["defn" "create-branch" ["branch-name" "renderer"] ["fn" ["&" "args"] ["Branch." "branch-name" "args" ["apply" "renderer" "args"] "renderer"]]], "types/record->name" ["defn" "record->name" ["record-name"] ["string/replace" ["pr-str" "record-name"] "|/" "|."]], "branch.container/branch-container" ["def" "branch-container" ["create-branch" ":container" "render"]], "main/ssr-stages" ["def" "ssr-stages" ["let" [["ssr-element" [".querySelector" "js/document" "|#ssr-stages"]] ["ssr-markup" [".getAttribute" "ssr-element" "|content"]]] ["read-string" "ssr-markup"]]], "comp.container/comp-container" ["def" "comp-container" ["create-comp" ":container" "render"]], "patch/patch-set-add" ["defn" "patch-set-add" ["base" "coord" "data"] ["update-in" "base" "coord" ["fn" ["cursor"] ["union" "cursor" "data"]]]], "main/store-ref" ["defonce" "store-ref" ["atom" ["{}" [":lit-0" "1"] [":vec-0" ["[]" ["{}" [":a" "1"]]]] [":seq-0" ["list" ["{}" [":a" "1"]]]] [":set-0" ["#{}" ["{}" [":a" "1"]]]] [":map-0" ["{}" [":x" "0"]]] [":in-map" ["{}" [":lit-1" "1"] [":vec-1" ["[]" ["{}" [":a" "1"]]]]]] [":date" ["{}" [":year" "2016"] [":month" "10"]]] [":user" ["{}" [":name" "|Chen"]]]]]], "main/client-store-ref" ["defonce" "client-store-ref" ["atom" "nil"]], "diff/find-map-changes" ["defn" "find-map-changes" ["acc" "coord" "a-pairs" "b-pairs"] ["let" [[["[]" "ka" "va"] ["first" "a-pairs"]] [["[]" "kb" "vb"] ["first" "b-pairs"]]] ["cond" [["and" ["empty?" "a-pairs"] ["empty?" "b-pairs"]] "acc"] [["empty?" "a-pairs"] ["let" [["next-acc" ["conj" "acc" ["[]" ["conj" "coord" "kb"] ":m/!" ["conceal-branch" "vb"]]]]] ["recur" "next-acc" "coord" ["[]"] ["rest" "b-pairs"]]]] [["empty?" "b-pairs"] ["let" [["next-acc" ["conj" "acc" ["[]" "coord" ":m/-" "ka"]]]] ["recur" "next-acc" "coord" ["[]"] ["rest" "a-pairs"]]]] [["=" "-1" ["compare" "ka" "kb"]] ["recur" ["conj" "acc" ["[]" ["conj" "coord" "ka"] ":m/-" "nil"]] "coord" ["rest" "a-pairs"] "b-pairs"]] [["=" "1" ["compare" "ka" "kb"]] ["recur" ["conj" "acc" ["[]" ["conj" "coord" "kb"] ":m/!" ["conceal-branch" "vb"]]] "coord" "a-pairs" ["rest" "b-pairs"]]] [":else" ["recur" ["into" ["[]"] ["concat" "acc" ["diff-view" ["conj" "coord" "ka"] "va" "vb"]]] "coord" ["rest" "a-pairs"] ["rest" "b-pairs"]]]]]], "patch/patch-one" ["defn" "patch-one" ["base" "change"] ["let" [[["[]" "coord" "op" "data"] "change"]] ["case" "op" [":v/+!" ["patch-vector-append" "base" "coord" "data"]] [":v/-!" ["patch-vector-drop" "base" "coord" "data"]] [":m/-" ["patch-map-remove" "base" "coord" "data"]] [":m/!" ["patch-map-set" "base" "coord" "data"]] [":st/++" ["patch-set-add" "base" "coord" "data"]] [":st/--" ["patch-set-remove" "base" "coord" "data"]] [":sq/-+" ["patch-seq" "base" "coord" "data"]] ["do" ["println" "|Unkown op:" "op"] "base"]]]], "patch/patch-vector-append" ["defn" "patch-vector-append" ["base" "coord" "data"] ["update-in" "base" "coord" ["fn" ["cursor"] ["into" ["[]"] ["concat" "cursor" "data"]]]]], "core/render-seq" ["defn" "render-seq" ["data-tree" "cached"] ["let" [["size" ["count" "data-tree"]] ["cached-list" ["into" ["[]"] "cached"]] ["length" ["count" "cached-list"]]] ["->>" "data-tree" ["map-indexed" ["fn" ["idx" "x"] ["render-view" "x" ["get" "cached-list" ["-" "length" ["-" "size" "idx"]]]]]]]]], "diff/find-vector-changes" ["defn" "find-vector-changes" ["acc" "idx" "coord" "a-pairs" "b-pairs"] ["--" "println" "idx" "a-pairs" "b-pairs"] ["cond" [["and" ["empty?" "a-pairs"] ["empty?" "b-pairs"]] "acc"] [["empty?" "b-pairs"] ["conj" "acc" ["[]" "coord" ":v/-!" "idx"]]] [["empty?" "a-pairs"] ["conj" "acc" ["[]" "coord" ":v/+!" ["conceal-branch" "b-pairs"]]]] [":else" ["recur" ["into" ["[]"] ["concat" "acc" ["diff-view" ["conj" "coord" "idx"] ["first" "a-pairs"] ["first" "b-pairs"]]]] ["inc" "idx"] "coord" ["rest" "a-pairs"] ["rest" "b-pairs"]]]]], "core/render-vector" ["defn" "render-vector" ["data-tree" "cached"] ["->>" "data-tree" ["map-indexed" ["fn" ["idx" "x"] ["render-view" "x" ["get" "cached" "idx"]]]] ["into" ["[]"]]]], "patch/patch-seq" ["defn" "patch-seq" ["base" "coord" "data"] ["let" [[["[]" "n" "content"] "data"]] ["update-in" "base" "coord" ["fn" ["cursor"] ["concat" "content" ["if" ["zero?" "n"] "cursor" ["drop" "n" "cursor"]]]]]]], "diff/find-seq-changes" ["defn" "find-seq-changes" ["coord" "ra" "rb"] ["cond" [["and" ["empty?" "ra"] ["empty?" "rb"]] ["[]"]] [["empty?" "ra"] ["[]" ["[]" "coord" ":sq/-+" ["[]" "0" ["conceal-branch" ["reverse" "rb"]]]]]] [["empty?" "rb"] ["[]" ["[]" "coord" ":sq/-+" ["[]" ["count" "ra"] ["[]"]]]]] [":else" ["if" ["identical?" ["first" "ra"] ["first" "rb"]] ["recur" "coord" ["rest" "ra"] ["rest" "rb"]] ["[]" ["[]" "coord" ":sq/-+" ["[]" ["count" "ra"] ["conceal-branch" ["reverse" "rb"]]]]]]]]], "patch/patch-view" ["defn" "patch-view" ["base" "changes"] ["if" ["empty?" "changes"] "base" ["recur" ["patch-one" "base" ["first" "changes"]] ["rest" "changes"]]]], "comp.panel/style-line" ["def" "style-line" ["{}" [":height" "|40px"]]], "main/render-data-view!" ["defn" "render-data-view!" [] ["let" [["data-view" ["render-view" ["branch-container" "@store-ref"] "@data-view-ref"]] ["changes" ["diff-view" ["[]"] "@data-view-ref" "data-view"]] ["new-client" ["patch-view" "@client-store-ref" "changes"]]] ["--" "println" "|Data view:" ["conceal-branch" "data-view"]] ["println" "|Changes:" "changes"] ["--" "println" "|After patching:" "new-client"] ["reset!" "data-view-ref" "data-view"] ["reset!" "client-store-ref" "new-client"]]], "comp.panel/comp-panel" ["def" "comp-panel" ["create-comp" ":panel" "render"]], "comp.panel/on-click" ["defn" "on-click" ["op"] ["fn" ["e" "dispatch!"] ["dispatch!" "op" ["rand-int" "100"]]]], "comp.panel/render" ["defn" "render" [] ["fn" ["state" "mutate!"] ["div" ["{}"] ["div" ["{}" [":style" "style-line"]] ["render-button" "|Change lit-0" ":lit-0"] ["comp-space" "8" "nil"] ["render-button" "|Change lit-1" ":lit-1"]] ["div" ["{}" [":style" "style-line"]] ["render-button" "|Change map-0" ":map-0"] ["comp-space" "8" "nil"] ["render-button" "|Remove map-0" ":map-0-rm"]] ["div" ["{}" [":style" "style-line"]] ["render-button" "|Change vec-0" ":vec-0"] ["comp-space" "8" "nil"] ["render-button" "|Remove vec-0" ":vec-0-rm"]] ["div" ["{}" [":style" "style-line"]] ["render-button" "|Change seq-0" ":seq-0"] ["comp-space" "8" "nil"] ["render-button" "|Change seq-0 remove" ":seq-0-rm"]] ["div" ["{}" [":style" "style-line"]] ["render-button" "|Change set-0" ":set-0"] ["comp-space" "8" "0"] ["render-button" "|Change set-0 remove" ":set-0-rm"]] ["div" ["{}" [":style" "style-line"]] ["render-button" "|Change date" ":date"]]]]], "main/states-ref" ["defonce" "states-ref" ["atom" ["{}"]]], "branch.card/comp-card" ["def" "branch-card" ["create-branch" ":card" "render"]], "main/data-view-ref" ["defonce" "data-view-ref" ["atom" "nil"]], "diff/diff-set" ["defn" "diff-set" ["coord" "a" "b"] ["let" [["added" ["difference" "b" "a"]] ["removed" ["difference" "a" "b"]]] ["into" ["[]"] ["concat" ["if" ["empty?" "added"] "no-changes" ["[]" ["[]" "coord" ":st/++" ["conceal-branch" "added"]]]] ["if" ["empty?" "removed"] "no-changes" ["[]" ["[]" "coord" ":st/--" ["conceal-branch" "removed"]]]]]]]], "patch/patch-map-remove" ["defn" "patch-map-remove" ["base" "coord" "path"] ["update-in" "base" "coord" ["fn" ["cursor"] ["dissoc" "cursor" "path"]]]]}, :namespaces {"comp.panel" ["ns" "recollect.comp.panel" [":require" ["[]" "hsl.core" ":refer" ["[]" "hsl"]] ["[]" "respo-ui.style" ":as" "ui"] ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span"]] ["[]" "respo.comp.space" ":refer" ["[]" "comp-space"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]]]], "branch.container" ["ns" "recollect.branch.container" [":require" ["[]" "recollect.core" ":refer" ["[]" "create-branch"]] ["[]" "recollect.branch.card" ":refer" ["[]" "branch-card"]]]], "updater" ["ns" "recollect.updater"], "util" ["ns" "recollect.util"], "diff" ["ns" "recollect.diff" [":require" ["[]" "recollect.util" ":refer" ["[]" "literal?" "=seq"]] ["[]" "recollect.types" ":refer" ["[]" "branch?" "conceal-branch"]] ["[]" "clojure.set" ":refer" ["[]" "difference"]]]], "comp.container" ["ns" "recollect.comp.container" [":require" ["[]" "hsl.core" ":refer" ["[]" "hsl"]] ["[]" "respo-ui.style" ":as" "ui"] ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span"]] ["[]" "respo.comp.space" ":refer" ["[]" "comp-space"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]] ["[]" "recollect.comp.panel" ":refer" ["[]" "comp-panel"]] ["[]" "respo-value.comp.value" ":refer" ["[]" "render-value"]]]], "types" ["ns" "recollect.types" [":require" ["[]" "cljs.reader" ":refer" ["[]" "register-tag-parser!" "read-string"]] ["[]" "clojure.string" ":as" "string"] ["[]" "recollect.util" ":refer" ["[]" "literal?"]]]], "main" ["ns" "recollect.main" [":require" ["[]" "respo.core" ":refer" ["[]" "render!" "clear-cache!" "falsify-stage!" "render-element" "gc-states!"]] ["[]" "recollect.comp.container" ":refer" ["[]" "comp-container"]] ["[]" "cljs.reader" ":refer" ["[]" "read-string"]] ["[]" "recollect.core" ":refer" ["[]" "render-view"]] ["[]" "recollect.types" ":refer" ["[]" "conceal-branch"]] ["[]" "recollect.branch.container" ":refer" ["[]" "branch-container"]] ["[]" "recollect.diff" ":refer" ["[]" "diff-view"]] ["[]" "recollect.patch" ":refer" ["[]" "patch-view"]] ["[]" "recollect.updater" ":refer" ["[]" "updater"]]]], "branch.card" ["ns" "recollect.branch.card" [":require" ["[]" "recollect.core" ":refer" ["[]" "create-branch"]]]], "patch" ["ns" "recollect.patch" [":require" ["[]" "clojure.set" ":refer" ["[]" "union" "difference"]]]], "core" ["ns" "recollect.core" [":require" ["[]" "recollect.types" ":refer" ["[]" "Branch" "branch?"]] ["[]" "recollect.util" ":refer" ["[]" "=seq" "literal?"]]]]}, :procedures {"comp.panel" [], "branch.container" [], "updater" [], "util" [], "diff" [], "types" [["register-tag-parser!" ["record->name" "Branch"] "map->Branch"]], "main" [["set!" [".-onload" "js/window"] "-main!"]], "branch.card" [], "patch" [], "core" []}, :package "recollect"}